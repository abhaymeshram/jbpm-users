<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
	    http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd 
		http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing 
		infrastructure -->
<!-- 	<context:property-placeholder location="classpath:db.properties" /> -->

	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />
	
	<beans:bean id="appProperties" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
	    <beans:property name="locations">
	        <beans:list>
	            <beans:value>classpath:db.properties</beans:value>
	        </beans:list>
	    </beans:property>
 	</beans:bean>

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving 
		up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />
	

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources 
		in the /WEB-INF/views directory -->
	<!-- <beans:bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean> -->

	<!-- <beans:bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"	destroy-method="close">
		<beans:property name="driverClassName" value="${driverClassName}" />
		<beans:property name="url" value="${url}" />
		<beans:property name="username" value="${username}"/>
		<beans:property name="password" value="${password}" />
	</beans:bean>
 -->
	<!-- Hibernate 4 SessionFactory Bean definition -->
	<!-- <beans:bean id="hibernate4AnnotatedSessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<beans:property name="dataSource" ref="dataSource" />
		<beans:property name="annotatedClasses">
			 <beans:list>
				<beans:value>com.spring.model.Person</beans:value>
			</beans:list>
		</beans:property>
		<beans:property name="hibernateProperties">
			<beans:props>
				<beans:prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</beans:prop>
				<beans:prop key="hibernate.show_sql">true</beans:prop>
				<beans:prop key="hibernate.hbm2ddl.auto">update</beans:prop>
			</beans:props>
		</beans:property>
	</beans:bean> -->

	<!-- JPA Configuration -->
	<!-- <beans:bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<beans:property name="dataSource" ref="dataSource" />
		<beans:property name="jpaVendorAdapter">
			<beans:bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
				<beans:property name="generateDdl" value="true" />
				<beans:property name="showSql" value="true" />
				<beans:property name="database" value="MYSQL" />
			</beans:bean>
		</beans:property>
		<beans:property name="jpaProperties">
			<beans:props>
				<beans:prop key="hibernate.temp.use_jdbc_metadata_defaults">false</beans:prop>
				<beans:prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</beans:prop>
			</beans:props>
		</beans:property>
	</beans:bean> -->

	<!-- <tx:annotation-driven transaction-manager="transactionManager" /> -->

<!-- 	<jpa:repositories base-package="com.spring.jpa.dao" /> -->

	<context:component-scan base-package="com.biz" />

	<!-- <beans:bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<beans:property name="sessionFactory" ref="hibernate4AnnotatedSessionFactory" />
	</beans:bean> -->


</beans:beans>
